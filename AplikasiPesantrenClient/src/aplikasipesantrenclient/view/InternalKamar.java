/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package aplikasipesantrenclient.view;

import aplikasipesantren.Exception.KamarException;
import aplikasipesantren.entity.Kamar;
import aplikasipesantren.services.KamarDao;
import aplikasipesantrenclient.controller.KamarController;
import aplikasipesantrenclient.model.KamarModel;
import aplikasipesantrenclient.model.TabelKamarModel;
import aplikasipesantrenclient.model.listener.KamarListener;
import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Saddam
 */
public class InternalKamar extends javax.swing.JInternalFrame implements KamarListener, ListSelectionListener{
    private DialogIsianKamar kamarView;
    private TabelKamarModel tabelModel;
    private KamarModel model;
    private KamarController controller;
    private DialogIsianKamar formIsianKamar;
    private Registry r;
    /**
     * Creates new form InternalKamar
     */
    
    public InternalKamar(Registry r){
        r = r;
    }
    public InternalKamar() {
        tabelModel = new TabelKamarModel();
        
        model = new KamarModel();
        controller = new KamarController();
        initComponents();
        
        model.setHost("127.0.0.1");
        model.setPort(4444);
        model.setListener(this);
        controller.setModel(model);
        tabelKamar.getSelectionModel().addListSelectionListener(this);
        tabelKamar.setModel(tabelModel);
        loadDatabase();
    }

    public TabelKamarModel getTabelModel() {
        return tabelModel;
    }
    
    
    
    public JTable getTabelKamar() {
        return tabelKamar;
    }

    public JTextField getTxtDataSelection() {
        return txtDataSelection;
    }

    public JTextField getTxtIdDataSelection() {
        return txtIdDataSelection;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelKamar = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        txtCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        tbnHapus = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        cboBerdasarkan = new javax.swing.JComboBox();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel3 = new javax.swing.JLabel();
        txtIdDataSelection = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtDataSelection = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtKamarTersedia = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Informasi Kamar");

        tabelKamar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelKamar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabelKamarMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabelKamar);

        btnCari.setText("Cari Kamar");

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        tbnHapus.setText("Hapus");
        tbnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnHapusActionPerformed(evt);
            }
        });

        btnPrint.setText("Print");

        cboBerdasarkan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboBerdasarkan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCari)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                .addComponent(btnTambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tbnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCari)
                    .addComponent(btnTambah)
                    .addComponent(tbnHapus)
                    .addComponent(btnPrint)
                    .addComponent(cboBerdasarkan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jLabel3.setText("ID Data Selection :");
        jToolBar1.add(jLabel3);

        txtIdDataSelection.setEditable(false);
        jToolBar1.add(txtIdDataSelection);

        jLabel1.setText("      Data Selection :");
        jToolBar1.add(jLabel1);

        txtDataSelection.setEditable(false);
        jToolBar1.add(txtDataSelection);

        jLabel2.setText("      Kamar Tersedia : ");
        jToolBar1.add(jLabel2);

        txtKamarTersedia.setEditable(false);
        jToolBar1.add(txtKamarTersedia);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        formIsianKamar.setVisible(true);
        
        
    }//GEN-LAST:event_btnTambahActionPerformed

    private void tbnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnHapusActionPerformed
        controller.deleteKamar(this);
        
    }//GEN-LAST:event_tbnHapusActionPerformed

    private void tabelKamarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelKamarMousePressed
        
    }//GEN-LAST:event_tabelKamarMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnTambah;
    private javax.swing.JComboBox cboBerdasarkan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tabelKamar;
    private javax.swing.JButton tbnHapus;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtDataSelection;
    private javax.swing.JTextField txtIdDataSelection;
    private javax.swing.JTextField txtKamarTersedia;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onChange(KamarModel model) {
        txtDataSelection.setText(model.getNamaKamar());
        txtIdDataSelection.setText(String.valueOf(model.getIdKamar()));
    }

    @Override
    public void onInsert(Kamar kamar) {
        tabelModel.add(kamar);
    }

    @Override
    public void onDelete() {
        int index = tabelKamar.getSelectedRow();
        tabelModel.remove(index);
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        try{
            Kamar kamar = tabelModel.get(tabelKamar.getSelectedRow());
            txtIdDataSelection.setText(String.valueOf(kamar.getId()));
            txtDataSelection.setText(kamar.getNama());
        }catch(IndexOutOfBoundsException ex){
            
        }
    }
    
    public void loadDatabase(){
        
        try {
            Registry r = LocateRegistry.getRegistry("127.0.0.1", 4444);
            KamarDao dao;
            dao = (KamarDao) r.lookup("kamar");
            List<Kamar> listKamar = new ArrayList<Kamar>();
            listKamar = dao.getKamarKomplit();
            tabelModel.setList(listKamar);
        } catch (KamarException ex) {
            Logger.getLogger(InternalKamar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (RemoteException ex) {
            Logger.getLogger(InternalKamar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(InternalKamar.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
    }
}
